{"version":3,"sources":["services/apiService.js"],"names":["axios","require","BASE_URL","ManifestFileUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","file","travelAgentId","manifestType","masterPolicyNumber","insurancePolicyPackage","FormData","data","config","wrap","_context","prev","next","console","log","append","method","maxBodyLength","Infinity","url","headers","localStorage","getItem","request","abrupt","sent","stop","_x","apply","arguments","GetAllTravelAgents","_ref4","_callee2","_ref3","size","page","search","_context2","concat","_x2","AddTravelAgent","_ref6","_callee3","_context3","then","response","JSON","stringify","catch","error","_x3","GetTravelAgency","_ref8","_callee4","_ref7","id","_context4","_x4","UpdateTravelAgencyStatus","_ref9","_callee5","data2","_context5","_x5","UpdateTravelAgency","_ref10","_callee6","_context6","_x6","GetAllTravelAgency","_ref14","_callee8","_ref13","_context8","_x8","verifyDetailsHome","_ref16","_callee9","_ref15","name","passportNo","uidNo","_context9","_x9","getCountryDropdown","_ref17","_callee10","_context10","defaults","common","get","getClaimByUser","_ref19","_callee12","_context12","getClaimCategoryAndDocs","_ref21","_callee13","_ref20","_context13","_x10","getClaimCategories","_ref22","_callee14","_context14","paymentSaveAPI","_ref24","_callee15","_ref23","_context15","_x11","paymentUpdateAPI","_ref26","_callee16","_ref25","_context16","_x12","getCliamMetadata","_ref27","_callee17","res1","_context17","t0","removeItem","window","location","pathname","getCompleteCliamData","_ref28","_callee18","_context18","_x13","getClaimRequests","_ref29","_callee19","_context19","_x14","_x15","addClaimCategory","_ref32","_callee21","_ref31","title","description","_context21","_x19","deleteClaimCategory","_ref33","_callee22","_context22","_x20","addUser","_ref34","_callee23","_context23","_x21","addAddress","_ref35","_callee24","_context24","_x22","updateAddress","_ref36","_callee25","_context25","_x23","getAddressDetails","_ref37","_callee26","_context26","getTraveler","_ref39","_callee28","_context28","_x26","claimRequestTravelDetails","_ref40","_callee29","claimId","userId","_context29","_x27","_x28","claimRequestClaimDetails","_ref41","_callee30","_context30","_x29","_x30","claimRequestTimeline","_ref42","_callee31","_context31","_x31","claimRequestAddRemarks","_ref43","_callee32","remarks","claimReqId","_context32","_x32","_x33","_x34","claimRequestGetremarks","_ref44","_callee33","_context33","_x35","_x36","claimRequestStatus","_ref45","_callee34","status","comment","_context34","_x37","_x38","_x39","claimRequestSettlementDocs","_ref46","_callee35","files","settledAmount","approvedCategoryNumber","i","_context35","length","_x40","_x41","_x42","_x43","_x44","deleteDoc","_ref47","_callee36","_context36","_x45","generatePDF","_ref48","_callee37","_context37","claimRequestID","responseType","_x46"],"mappings":"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","file":"static/js/1.19c2b66c.chunk.js","sourcesContent":["const axios = require('axios');\r\n\r\nexport const BASE_URL = `https://api.stntinternational.com`;\r\n\r\nexport const ManifestFileUpload = async ({ file, travelAgentId, manifestType, masterPolicyNumber, insurancePolicyPackage }) => {\r\n    console.log('file', file);\r\n    const FormData = require('form-data');\r\n    const fs = require('fs');\r\n    let data = new FormData();\r\n    data.append('file', file)\r\n    data.append('travelAgentId', travelAgentId);\r\n    data.append('manifestType', manifestType);\r\n    data.append('masterPolicyNumber', masterPolicyNumber);\r\n    data.append('insurancePolicyPackage', insurancePolicyPackage);\r\n    //data.append\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/manifests',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config);\r\n}\r\n\r\nexport const ManifestGetUmrahAll = () => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/manifests',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\n// export const ManifestPopulate = () => {\r\n\r\n// let config = {\r\n//   method: 'get',\r\n//   maxBodyLength: Infinity,\r\n//   url: 'http://localhost:8000/api/manifests/pupulate_uploaded_file/7',\r\n//   headers: { \r\n//     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6MSwiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20iLCJmaXJzdE5hbWUiOiJzdXBlciJ9LCJpYXQiOjE2ODMxOTI1MjB9.qmNlOHBFOUGMLmyyRpvgt6W3Rz5sOC23CUR0HFSx148'\r\n//   }\r\n// };\r\n\r\n// axios.request(config)\r\n// .then((response) => {\r\n//   console.log(JSON.stringify(response.data));\r\n// })\r\n// .catch((error) => {\r\n//   console.log(error);\r\n// });\r\n\r\n// }\r\n\r\nexport const ManifestDownloadErrorFile = () => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: 'http://localhost:8000/api/manifests/error-csv/1',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const GetAllTravelAgents = async ({ size, page, search }) => {\r\n    let data = {\r\n        \"confirmPassword\": \"123456\",\r\n        \"password\": \"123456\",\r\n        \"userId\": \"6\"\r\n    }\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/travel-agencies?size=${size}&page=${page}&searchByAgencyName=${search}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config);\r\n}\r\n\r\nexport const GetTravelAgent = ({ id }) => {\r\n\r\n    let data = '{\\n    \"confirmPassword\":\"123456\",\\n    \"password\":\"123456\",\\n    \"userId\": \"6\"\\n}';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const AddTravelAgent = async (data) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n}\r\n\r\nexport const GetTravelAgency = async ({ id }) => {\r\n    let data = '{\\n    \"confirmPassword\":\"123456\",\\n    \"password\":\"123456\",\\n    \"userId\": \"6\"\\n}';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const UpdateTravelAgencyStatus = async (data) => {\r\n    let data2 = data\r\n    let config = {\r\n        method: 'put',\r\n        url: BASE_URL + '/api/travel-agencies/change-status',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data2\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const UpdateTravelAgency = async (data) => {\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const DeleteTravelAgency = async ({ id }) => {\r\n    let data = `{\\n    \"id\":${id},\\n    \"title\": \"Hello\",\\n    \"description\":\"This is fastly new Test claim document for the data\",\\n    \"isMandatory\": false\\n}`;\r\n\r\n    let config = {\r\n        method: 'delete',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n}\r\n\r\nexport const GetAllTravelAgency = async ({ size, page, search }) => {\r\n    let data = '{\\n    \"confirmPassword\":\"123456\",\\n    \"password\":\"123456\",\\n    \"userId\": \"6\"\\n}';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/travel-agencies?size=${size}&page=${page}&searchByAgencyName=${search}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const verifyDetailsHome = async ({ name, passportNo, uidNo }) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/verification?name=${name}&passportNo=${passportNo}&uidNo=${uidNo}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getCountryDropdown = async () => {\r\n    const url = BASE_URL + '/api/website/countries';\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token')\r\n    return await axios.get(url);\r\n}\r\n\r\n// export const addAddress = async ({ address, phoneNumber, emailAddress }) => {\r\n//     let data = JSON.stringify({\r\n//         \"address\": address,\r\n//         \"phoneNumber\": phoneNumber,\r\n//         \"emailAddress\": emailAddress\r\n//     });\r\n\r\n//     let config = {\r\n//         method: 'post',\r\n//         maxBodyLength: Infinity,\r\n//         url: BASE_URL + '/api/website/address',\r\n//         headers: {\r\n//             'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n//         },\r\n//         data: data\r\n//     };\r\n\r\n//     return await axios.request(config)\r\n// }\r\n\r\nexport const addClaim = async () => {\r\n    const FormData = require('form-data');\r\n    const fs = require('fs');\r\n    let data = new FormData();\r\n    data.append('claimCategoryId', '1');\r\n    data.append('lossCountry', 'Dubai');\r\n    data.append('Another data This is a claim document 1', fs.createReadStream('/home/meet/Downloads/GROVAY WEBSITE MAIN ERROR REPORT - 12Dec22.pdf'));\r\n    data.append('Another data This is a claim document 1', fs.createReadStream('/home/meet/Downloads/GROVAY WEBSITE MAIN ERROR REPORT - 30Nov22.pdf'));\r\n    data.append('Another data This is a claim document 2', fs.createReadStream('/home/meet/Downloads/1657200518OID1657197748236ST.pdf'));\r\n    data.append('Another data This is a claim document 2', fs.createReadStream('/home/meet/Downloads/1668435491OID1668435473309ST.pdf'));\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request',\r\n        headers: {\r\n            ...data.getHeaders()\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimByUser = async () => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/user',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimCategoryAndDocs = async ({ id }) => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-categories/documents/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimCategories = async () => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/claim-category?size=100',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const paymentSaveAPI = async ({ data }) => {\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/payment',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const paymentUpdateAPI = async ({ data, id }) => {\r\n\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/update/payment/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getCliamMetadata = async () => {\r\n    try {\r\n        let data = '';\r\n\r\n        let config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: BASE_URL + '/api/website/claim-request/user/meta',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: data\r\n        };\r\n\r\n        let res1 = await axios.request(config);\r\n        console.log(\"res1\", res1);\r\n        return res1;\r\n    } catch (error) {\r\n        \r\n        if (error) {\r\n            localStorage.removeItem('token');\r\n            window.location.pathname = \"/\";\r\n        }\r\n        console.error(error);\r\n        \r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCompleteCliamData = async (id) => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/review/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimRequests = async (size, page) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim?size=${size}&page=${page}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getAllClaimCategory = async (size, page, searchByTitle) => {\r\n    let data = {\r\n\r\n    };\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim-category?size=${size}&${page}&searchByTitle=${searchByTitle}`,\r\n        headers: {\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6MSwiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20iLCJmaXJzdE5hbWUiOiJzdXBlciJ9LCJpYXQiOjE2ODMxOTI1MjB9.qmNlOHBFOUGMLmyyRpvgt6W3Rz5sOC23CUR0HFSx148'\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const addClaimCategory = async ({ title, description }) => {\r\n    let data = {\r\n        \"title\": title,\r\n        \"description\": description,\r\n        \"associateClaimType\": \"silver\",\r\n    };\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim-category`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const deleteClaimCategory = async (id) => {\r\n    let data = {\r\n        \"id\": id,\r\n        \"title\": \"Hello\",\r\n        \"description\": \"This is fastly new Test claim document for the data\",\r\n        \"isMandatory\": false\r\n    };\r\n\r\n    let config = {\r\n        method: 'delete',\r\n        // maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim-documents/${id}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        // data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const addUser = async (data) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/users`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n         },\r\n        data : data\r\n      };\r\n      \r\n      return await axios.request(config)\r\n}\r\n\r\nexport const addAddress = async (data) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/address`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\n\r\n\r\nexport const updateAddress = async (data) => {\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/address`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getAddressDetails = async () => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/address`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getTravlersList = async (size, page) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://api.stntinternational.com/api/api/travellers/?size=${size}&page=${page}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getTraveler = async (id) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://api.stntinternational.com/api/travellers/${id}?size=2&page=1`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestTravelDetails = async (claimId, userId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://api.stntinternational.com/api/claim/travel-details/${userId}/${claimId}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestClaimDetails = async (claimId, userId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/claim-details/${userId}/${claimId}`,\r\n        headers: {\r\n\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestTimeline = async (claimId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/claim-timeline/${claimId}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestAddRemarks = async (userId, remarks, claimReqId) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/remarks`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: {\r\n            \"userId\": userId,\r\n            \"remarks\": remarks,\r\n            \"claimReqId\": claimReqId\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestGetremarks = async (userId, claimReqId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/remarks/${claimReqId}/${userId}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestStatus = async (id, status, comment) => {\r\n\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://api.stntinternational.com/api/claim',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n\r\n        data: {\r\n            id: id,\r\n            \"status\": status,\r\n            \"comment\": comment\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestSettlementDocs = async (userId, claimId, files, settledAmount,approvedCategoryNumber ) => {\r\n    let data = new FormData();\r\n    data.append('userId', userId);\r\n    data.append('claimReqId', claimId);\r\n    data.append('settledAmount', settledAmount);\r\n    data.append('approvedCategoryNumber', approvedCategoryNumber);\r\n\r\n    for(let i = 0; i < files.length; i++) {\r\n        data.append('file', files[i]);\r\n    }\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/claim-settlements`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n   return await axios.request(config)\r\n}\r\n\r\nexport const deleteDoc = async (data) => {\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://api.stntinternational.com/api/website//claim-request/delete-doc',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const generatePDF = async (data) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://api.stntinternational.com/api/claim/claim-summary/'+ data.claimRequestID,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n            'Response-Type': 'blob',\r\n        },\r\n        responseType: 'blob'\r\n    };\r\n\r\n    return await axios.request(config)\r\n}"],"sourceRoot":""}