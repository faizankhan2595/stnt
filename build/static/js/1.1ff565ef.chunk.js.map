{"version":3,"sources":["services/apiService.js"],"names":["axios","require","BASE_URL","ManifestFileUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","file","travelAgentId","manifestType","masterPolicyNumber","insurancePolicyPackage","FormData","data","config","wrap","_context","prev","next","console","log","append","method","maxBodyLength","Infinity","url","headers","localStorage","getItem","request","abrupt","sent","stop","_x","apply","arguments","GetAllTravelAgents","_ref4","_callee2","_ref3","size","page","search","_context2","concat","_x2","AddTravelAgent","_ref6","_callee3","_context3","then","response","JSON","stringify","catch","error","_x3","GetTravelAgency","_ref8","_callee4","_ref7","id","_context4","_x4","UpdateTravelAgencyStatus","_ref9","_callee5","data2","_context5","_x5","UpdateTravelAgency","_ref10","_callee6","_context6","_x6","GetAllTravelAgency","_ref13","_callee8","pageSize","_context8","_x8","_x9","verifyDetailsHome","_ref15","_callee9","_ref14","name","passportNo","uidNo","_context9","_x10","getCountryDropdown","_ref16","_callee10","_context10","defaults","common","get","getClaimByUser","_ref18","_callee12","_context12","getClaimCategoryAndDocs","_ref20","_callee13","_ref19","_context13","_x11","getClaimCategories","_ref21","_callee14","_context14","paymentSaveAPI","_ref23","_callee15","_ref22","_context15","_x12","paymentUpdateAPI","_ref25","_callee16","_ref24","_context16","_x13","getCliamMetadata","_ref26","_callee17","res1","_context17","t0","removeItem","window","location","pathname","getCompleteCliamData","_ref27","_callee18","_context18","_x14","getClaimRequests","_ref28","_callee19","_context19","_x15","_x16","addClaimCategory","_ref31","_callee21","_ref30","title","description","_context21","_x20","deleteClaimCategory","_ref32","_callee22","_context22","_x21","addUser","_ref33","_callee23","_context23","_x22","addAddress","_ref34","_callee24","_context24","_x23","updateAddress","_ref35","_callee25","_context25","_x24","getAddressDetails","_ref36","_callee26","_context26","getTraveler","_ref38","_callee28","_context28","_x27","claimRequestTravelDetails","_ref39","_callee29","claimId","userId","_context29","_x28","_x29","claimRequestClaimDetails","_ref40","_callee30","_context30","_x30","_x31","claimRequestTimeline","_ref41","_callee31","_context31","_x32","claimRequestAddRemarks","_ref42","_callee32","remarks","claimReqId","_context32","_x33","_x34","_x35","claimRequestGetremarks","_ref43","_callee33","_context33","_x36","_x37","claimRequestStatus","_ref44","_callee34","status","comment","_context34","_x38","_x39","_x40","claimRequestSettlementDocs","_ref45","_callee35","files","settledAmount","approvedCategoryNumber","i","_context35","length","_x41","_x42","_x43","_x44","_x45","deleteDoc","_ref46","_callee36","_context36","_x46","generatePDF","_ref47","_callee37","_context37","claimRequestID","responseType","_x47"],"mappings":"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","file":"static/js/1.1ff565ef.chunk.js","sourcesContent":["const axios = require('axios');\r\n\r\nexport const BASE_URL = `https://api.stntinternational.com`;\r\n\r\nexport const ManifestFileUpload = async ({ file, travelAgentId, manifestType, masterPolicyNumber, insurancePolicyPackage }) => {\r\n    console.log('file', file);\r\n    const FormData = require('form-data');\r\n    const fs = require('fs');\r\n    let data = new FormData();\r\n    data.append('file', file)\r\n    data.append('travelAgentId', travelAgentId);\r\n    data.append('manifestType', manifestType);\r\n    data.append('masterPolicyNumber', masterPolicyNumber);\r\n    data.append('insurancePolicyPackage', insurancePolicyPackage);\r\n    //data.append\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/manifests',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config);\r\n}\r\n\r\nexport const ManifestGetUmrahAll = () => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/manifests',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\n// export const ManifestPopulate = () => {\r\n\r\n// let config = {\r\n//   method: 'get',\r\n//   maxBodyLength: Infinity,\r\n//   url: 'http://localhost:8000/api/manifests/pupulate_uploaded_file/7',\r\n//   headers: { \r\n//     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6MSwiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20iLCJmaXJzdE5hbWUiOiJzdXBlciJ9LCJpYXQiOjE2ODMxOTI1MjB9.qmNlOHBFOUGMLmyyRpvgt6W3Rz5sOC23CUR0HFSx148'\r\n//   }\r\n// };\r\n\r\n// axios.request(config)\r\n// .then((response) => {\r\n//   console.log(JSON.stringify(response.data));\r\n// })\r\n// .catch((error) => {\r\n//   console.log(error);\r\n// });\r\n\r\n// }\r\n\r\nexport const ManifestDownloadErrorFile = () => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: 'http://localhost:8000/api/manifests/error-csv/1',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const GetAllTravelAgents = async ({ size, page, search }) => {\r\n    let data = {\r\n        \"confirmPassword\": \"123456\",\r\n        \"password\": \"123456\",\r\n        \"userId\": \"6\"\r\n    }\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/travel-agencies?size=${size}&page=${page}&searchByAgencyName=${search}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config);\r\n}\r\n\r\nexport const GetTravelAgent = ({ id }) => {\r\n\r\n    let data = '{\\n    \"confirmPassword\":\"123456\",\\n    \"password\":\"123456\",\\n    \"userId\": \"6\"\\n}';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const AddTravelAgent = async (data) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n}\r\n\r\nexport const GetTravelAgency = async ({ id }) => {\r\n    let data = '{\\n    \"confirmPassword\":\"123456\",\\n    \"password\":\"123456\",\\n    \"userId\": \"6\"\\n}';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const UpdateTravelAgencyStatus = async (data) => {\r\n    let data2 = data\r\n    let config = {\r\n        method: 'put',\r\n        url: BASE_URL + '/api/travel-agencies/change-status',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data2\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const UpdateTravelAgency = async (data) => {\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const DeleteTravelAgency = async ({ id }) => {\r\n    let data = `{\\n    \"id\":${id},\\n    \"title\": \"Hello\",\\n    \"description\":\"This is fastly new Test claim document for the data\",\\n    \"isMandatory\": false\\n}`;\r\n\r\n    let config = {\r\n        method: 'delete',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/travel-agencies/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n        .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n}\r\n\r\nexport const GetAllTravelAgency = async (page, pageSize) => {\r\n    let data = '{\\n    \"confirmPassword\":\"123456\",\\n    \"password\":\"123456\",\\n    \"userId\": \"6\"\\n}';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/travel-agencies?size=${pageSize}&page=${page}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const verifyDetailsHome = async ({ name, passportNo, uidNo }) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/verification?name=${name}&passportNo=${passportNo}&uidNo=${uidNo}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getCountryDropdown = async () => {\r\n    const url = BASE_URL + '/api/website/countries';\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token')\r\n    return await axios.get(url);\r\n}\r\n\r\n// export const addAddress = async ({ address, phoneNumber, emailAddress }) => {\r\n//     let data = JSON.stringify({\r\n//         \"address\": address,\r\n//         \"phoneNumber\": phoneNumber,\r\n//         \"emailAddress\": emailAddress\r\n//     });\r\n\r\n//     let config = {\r\n//         method: 'post',\r\n//         maxBodyLength: Infinity,\r\n//         url: BASE_URL + '/api/website/address',\r\n//         headers: {\r\n//             'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n//         },\r\n//         data: data\r\n//     };\r\n\r\n//     return await axios.request(config)\r\n// }\r\n\r\nexport const addClaim = async () => {\r\n    const FormData = require('form-data');\r\n    const fs = require('fs');\r\n    let data = new FormData();\r\n    data.append('claimCategoryId', '1');\r\n    data.append('lossCountry', 'Dubai');\r\n    data.append('Another data This is a claim document 1', fs.createReadStream('/home/meet/Downloads/GROVAY WEBSITE MAIN ERROR REPORT - 12Dec22.pdf'));\r\n    data.append('Another data This is a claim document 1', fs.createReadStream('/home/meet/Downloads/GROVAY WEBSITE MAIN ERROR REPORT - 30Nov22.pdf'));\r\n    data.append('Another data This is a claim document 2', fs.createReadStream('/home/meet/Downloads/1657200518OID1657197748236ST.pdf'));\r\n    data.append('Another data This is a claim document 2', fs.createReadStream('/home/meet/Downloads/1668435491OID1668435473309ST.pdf'));\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request',\r\n        headers: {\r\n            ...data.getHeaders()\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimByUser = async () => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/user',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimCategoryAndDocs = async ({ id }) => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-categories/documents/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimCategories = async () => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/claim-category?size=100',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const paymentSaveAPI = async ({ data }) => {\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/payment',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const paymentUpdateAPI = async ({ data, id }) => {\r\n\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/update/payment/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getCliamMetadata = async () => {\r\n    try {\r\n        let data = '';\r\n\r\n        let config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: BASE_URL + '/api/website/claim-request/user/meta',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: data\r\n        };\r\n\r\n        let res1 = await axios.request(config);\r\n        console.log(\"res1\", res1);\r\n        return res1;\r\n    } catch (error) {\r\n        \r\n        if (error) {\r\n            localStorage.removeItem('token');\r\n            window.location.pathname = \"/\";\r\n        }\r\n        console.error(error);\r\n        \r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCompleteCliamData = async (id) => {\r\n    let data = '';\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + '/api/website/claim-request/review/' + id,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getClaimRequests = async (size, page) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim?size=${size}&page=${page}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getAllClaimCategory = async (size, page, searchByTitle) => {\r\n    let data = {\r\n\r\n    };\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim-category?size=${size}&${page}&searchByTitle=${searchByTitle}`,\r\n        headers: {\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6MSwiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20iLCJmaXJzdE5hbWUiOiJzdXBlciJ9LCJpYXQiOjE2ODMxOTI1MjB9.qmNlOHBFOUGMLmyyRpvgt6W3Rz5sOC23CUR0HFSx148'\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const addClaimCategory = async ({ title, description }) => {\r\n    let data = {\r\n        \"title\": title,\r\n        \"description\": description,\r\n        \"associateClaimType\": \"silver\",\r\n    };\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim-category`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const deleteClaimCategory = async (id) => {\r\n    let data = {\r\n        \"id\": id,\r\n        \"title\": \"Hello\",\r\n        \"description\": \"This is fastly new Test claim document for the data\",\r\n        \"isMandatory\": false\r\n    };\r\n\r\n    let config = {\r\n        method: 'delete',\r\n        // maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim-documents/${id}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        // data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const addUser = async (data) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/users`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n         },\r\n        data : data\r\n      };\r\n      \r\n      return await axios.request(config)\r\n}\r\n\r\nexport const addAddress = async (data) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/address`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\n\r\n\r\nexport const updateAddress = async (data) => {\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/address`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getAddressDetails = async () => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/website/address`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getTravlersList = async (size, page) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://api.stntinternational.com/api/api/travellers/?size=${size}&page=${page}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const getTraveler = async (id) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://api.stntinternational.com/api/travellers/${id}?size=2&page=1`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestTravelDetails = async (claimId, userId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://api.stntinternational.com/api/claim/travel-details/${userId}/${claimId}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestClaimDetails = async (claimId, userId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/claim-details/${userId}/${claimId}`,\r\n        headers: {\r\n\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestTimeline = async (claimId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/claim-timeline/${claimId}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestAddRemarks = async (userId, remarks, claimReqId) => {\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/remarks`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: {\r\n            \"userId\": userId,\r\n            \"remarks\": remarks,\r\n            \"claimReqId\": claimReqId\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestGetremarks = async (userId, claimReqId) => {\r\n\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/remarks/${claimReqId}/${userId}`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestStatus = async (id, status, comment) => {\r\n\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://api.stntinternational.com/api/claim',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n\r\n        data: {\r\n            id: id,\r\n            \"status\": status,\r\n            \"comment\": comment\r\n        }\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const claimRequestSettlementDocs = async (userId, claimId, files, settledAmount,approvedCategoryNumber ) => {\r\n    let data = new FormData();\r\n    data.append('userId', userId);\r\n    data.append('claimReqId', claimId);\r\n    data.append('settledAmount', settledAmount);\r\n    data.append('approvedCategoryNumber', approvedCategoryNumber);\r\n\r\n    for(let i = 0; i < files.length; i++) {\r\n        data.append('file', files[i]);\r\n    }\r\n\r\n    let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: BASE_URL + `/api/claim/claim-settlements`,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n   return await axios.request(config)\r\n}\r\n\r\nexport const deleteDoc = async (data) => {\r\n    let config = {\r\n        method: 'put',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://api.stntinternational.com/api/website//claim-request/delete-doc',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n    };\r\n\r\n    return await axios.request(config)\r\n}\r\n\r\nexport const generatePDF = async (data) => {\r\n    let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://api.stntinternational.com/api/claim/claim-summary/'+ data.claimRequestID,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n            'Response-Type': 'blob',\r\n        },\r\n        responseType: 'blob'\r\n    };\r\n\r\n    return await axios.request(config)\r\n}"],"sourceRoot":""}