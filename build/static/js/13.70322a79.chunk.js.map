{"version":3,"sources":["views/app-views/Membership_plans/AddNew.js"],"names":["AddNew","param","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","handleOk","setTimeout","_Form$useForm","Form","useForm","form","createMembership","values","url","formData","FormData","key","append","axios","method","data","headers","then","response","console","log","status","catch","error","pathname","useEffect","concat","id","get","setFieldsValue","_jsxs","children","layout","onFinish","_objectSpread","name","className","style","gap","width","_jsx","Item","label","rules","required","message","Input","placeholder","InputNumber","min","prefix","CustomIcon","svg","dollars","TextArea","rows","Button","htmlType","Modal","footer","visible","onOk","onCancel","Verified"],"mappings":"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","file":"static/js/13.70322a79.chunk.js","sourcesContent":["import { Button, Form, Input, InputNumber, Modal } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\nimport { dollars, Verified } from 'assets/svg/icon'\r\nimport axios from 'axios'\r\nimport CustomIcon from 'components/util-components/CustomIcon'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\n\r\nexport default function AddNew() {\r\n\r\n    const param = useParams()\r\n    const location = useLocation()\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setIsModalOpen(true);\r\n        handleOk()\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setTimeout(() => {\r\n            setIsModalOpen(false);\r\n        }, 10000)\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        if (location.pathname===`/app/membership/membership_plans/update/${param.id}`) {\r\n            // let newVal = \r\n            createMembership({...values,id:param.id},`http://127.0.0.1:3333/membership/update`)\r\n        }else{\r\n            createMembership(values,'http://127.0.0.1:3333/membership/new')\r\n        }\r\n    };\r\n    // const onFinishFailed = (errorInfo) => {\r\n    //     console.log('Failed:', errorInfo);\r\n    // };\r\n\r\n    const createMembership = (values,url) => {\r\n        const formData = new FormData();\r\n        for (const key in values) {\r\n            formData.append(key, values[key])\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: formData,\r\n            headers: {\r\n                'content-type': `multipart/form-data`,\r\n            },\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            if (response.data.status) {\r\n                showModal()\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const getMembershipPlan = () => {\r\n        axios.get(`http://127.0.0.1:3333/membership?id=${param.id}`).then((response) => {\r\n          console.log(response.data[0])\r\n          if (response.status===200) {\r\n            // const data = response.data.result[0];\r\n            form.setFieldsValue(response.data[0])\r\n          } else {\r\n            console.log(response)\r\n          }\r\n        });\r\n      }\r\n      console.log(location.pathname)\r\n\r\n    useEffect(() => {\r\n      if (location.pathname===`/app/membership/membership_plans/update/${param.id}`) {\r\n        getMembershipPlan();\r\n      }\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Form layout=\"vertical\"\r\n                onFinish={onFinish}\r\n                // onFinishFailed={onFinishFailed}\r\n                form={form}\r\n                name=\"control-hooks\"\r\n            >\r\n                <div className='border rounded p-3'>\r\n                    <div style={{ gap: \"60px\" }} className='d-flex '>\r\n                        <div style={{ width: \"45%\", }}>\r\n                            <Form.Item name='id' label=\"Membership Id\" rules={[{ required: true, message: 'Please enter Membership Id' }]} >\r\n                                <Input placeholder=\"Membership Id\" />\r\n                            </Form.Item>\r\n                            <Form.Item name='period' label=\"Membership Period\" >\r\n                                <InputNumber min={1} style={{ width: \"100%\" }} placeholder=\"Membership Period\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div style={{ width: \"45%\", }}>\r\n                            <Form.Item name='name' label=\"Membership Type\" rules={[{ required: true, message: 'Please enter Membership Type' }]} >\r\n                                <Input placeholder=\"Full Name\" />\r\n                            </Form.Item>\r\n                            <Form.Item name='amount' label=\"Membership Amount\">\r\n                                <InputNumber min={0} style={{ width: \"100%\" }} prefix={<CustomIcon svg={dollars} className=\"site-form-item-icon\" />} placeholder=\"Amount\" />\r\n                            </Form.Item>\r\n                        </div>\r\n                    </div>\r\n                    <Form.Item name='perks' label=\"Membership Perks\">\r\n                        <TextArea placeholder='Type here' rows={6} />\r\n                    </Form.Item>\r\n                </div>\r\n                <Form.Item >\r\n                    <div style={{ gap: \"10px\" }} className='mt-5 d-flex justify-content-end'>\r\n                        <Button className='px-4 font-weight-semibold' htmlType=\"button\">\r\n                            Back\r\n                        </Button>\r\n                        <Button className='px-4 font-weight-semibold' htmlType=\"button\" >\r\n                            Clear All\r\n                        </Button>\r\n                        <Button className=\"px-4 font-weight-semibold text-white bg-info\" htmlType=\"submit\" >\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n            <Modal width={400} footer={null} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n                <div className='d-flex my-3 align-items-center flex-column justify-content-center'>\r\n                    <CustomIcon svg={Verified} />\r\n                    <h3 className='font-weight-bold mt-4'>MembershipPlan Created!</h3>\r\n                    <span className='text-center font-size-sm w-75 font-weight-semibold'>Membership Plan 1 crested successfully</span>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}